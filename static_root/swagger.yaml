basePath: /api
definitions:
  myriade_menu_item:
    properties:
      texteFR:
        title: Texte FR
        type: string
      texteEN:
        title: Texte EN
        type: string
      page:
        title: Lien de la page
        type: string
      name:
        title: Id
        type: string
      contenu:
        type: array
        title: Liste ordonn√©e de contenus de la page
    required:
      - name
      - texteFR
      - texteEN
      - page
    type: object
  myriade_text:
    properties:
      texteFR:
        title: Texte FR
        type: string
      texteEN:
        title: Texte EN
        type: string
      position:
        title: Position (left|center|right)
        type: string
      name:
        title: Id
        type: string
    required:
      - name
      - texteFR
      - texteEN
    type: object
  myriade_image:
    properties:
      source:
        title: Source
        type: string
      texteFR:
        title: Texte FR
        type: string
      texteEN:
        title: Texte EN
        type: string
      position:
        title: Position (left|center|right)
        type: string
      name:
        title: Id
        type: string
    required:
      - name
      - source
    type: object
  error:
    properties:
      details:
        description: more details about the error.
        type: object
      error:
        description: Title of the error
        type: string
    type: object
info:
  description: These APIs let you interact with projects by arannou
  title: Arannou backend
  version: local
paths:
  /import:
    post:
      parameters:
        - description: Json file. Must be a list of objects having a data_type attribute
          in: formData
          name: import_file
          required: true
          type: file
      responses:
        "201":
          description:
            All objects added. The responses contains the new created objects
            as it might have new properties added by back end
        "400":
          description: Bad request. Overview message and detailed informations
          schema:
            $ref: "#/definitions/error"
      summary: Bulk import a bunch of objects
  /schema:
    get:
      description:
        Swagger schema is the whole application data model. Respecting
        Swagger openapi reference.
      responses:
        "200":
          description: Swagger schema for the application
      summary: Get swagger schema
      tags:
        - Diverse
  /upload-image/{category}:
    post:
      consumes:
        - multipart/form-data
      description: Import a picture like jpeg, gif, png...
      parameters:
        - description: Image file
          in: formData
          name: image
          required: true
          type: file
        - description: Category to put the image on
          in: path
          name: category
          required: true
          type: string
      responses:
        "200":
          description: Image imported
        "400":
          description: Bad request. Overview message and detailed informations
          schema:
            $ref: "#/definitions/error"
      summary: Import a image
  /{object_type}:
    get:
      parameters:
        - description: Object type
          in: path
          name: object_type
          required: true
          type: string
      responses:
        "200":
          description: List of objects
          schema:
            type: object
      summary: Get all objects of object_type
    post:
      parameters:
        - description: Object type
          in: path
          name: object_type
          required: true
          type: string
        - description: Well formed model object
          in: body
          name: Object body
          required: true
          schema:
            type: object
      responses:
        "201":
          description:
            Object added. The responses contains the new created object
            as it might have new properties added by back end
        "400":
          description: Bad request. Overview message and detailed informations
          schema:
            $ref: "#/definitions/error"
      summary: Add a new object of object_type
  /{object_type}/{name}:
    delete:
      parameters:
        - description: Object type
          in: path
          name: object_type
          required: true
          type: string
        - description: Object name
          in: path
          name: name
          required: true
          type: string
      responses:
        "201":
          description: Object deleted
        "400":
          description: Bad request. Overview message and detailed informations
          schema:
            $ref: "#/definitions/error"
      summary: Delete an object of object_type
    put:
      parameters:
        - description: Object type
          in: path
          name: object_type
          required: true
          type: string
        - description: Object name
          in: path
          name: name
          required: true
          type: string
        - description: New object containing your modifications
          in: body
          name: Object body
          required: true
          schema:
            type: object
      responses:
        "201":
          description: Object updated
        "400":
          description: Bad request. Overview message and detailed informations
          schema:
            $ref: "#/definitions/error"
      summary: Update an object of object_type
swagger: "2.0"
